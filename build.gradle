// File: /Users/arsenyp/IdeaProjects/mc-test-ai1/build.gradle

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'org.h0x91b'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT")
    implementation 'com.google.inject:guice:7.0.0'
    implementation files('server/Paper 1.21 109.jar')
}

def targetJavaVersion = 21
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(targetJavaVersion)
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

shadowJar {
    archiveBaseName.set(project.name)
    archiveClassifier.set('')
    archiveVersion.set('')
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

build.dependsOn shadowJar

def serverPluginsDir = "/Users/arsenyp/Library/CloudStorage/GoogleDrive-h0x91b@gmail.com/My Drive/mc-server/plugins/McTestAi1/"

task copyQuestionsYml(type: Copy) {
    from 'src/main/resources/questions.yml'
    into serverPluginsDir
    doLast {
        logger.lifecycle("Copied questions.yml to server plugins directory")
    }
}

task copyJarToServer(type: Copy) {
    from shadowJar
    into serverPluginsDir
    doLast {
        logger.lifecycle("Copied plugin JAR to server plugins directory")
    }
}

copyJarToServer.dependsOn copyQuestionsYml
tasks.shadowJar.finalizedBy copyJarToServer

gradle.buildFinished {
    if (tasks.copyQuestionsYml.state.executed) {
        logger.lifecycle("questions.yml has been updated in the server plugins directory")
    } else {
        logger.warn("copyQuestionsYml task was not executed. Check if it's properly integrated into the build process.")
    }
}
